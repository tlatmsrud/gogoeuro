<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class = "org.springframework.jndi.JndiObjectFactoryBean">
		<property name = "jndiName" value="java:/comp/env/jdbc/gogoeuro"/>
	</bean>
		
	<!-- SQL Session Factory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name ="dataSource" ref="dataSource"/>
		
		<!-- MyBatis 설정 파일의 위치를 지정합니다. -->
		<property name="configLocation" value="/WEB-INF/spring/mybatis-config.xml"/>
		
		<!-- SQL 파일의 위치를 지정합니다. -->
		<property name="mapperLocations" value="/WEB-INF/spring/sqlmap/*.xml"/>
	</bean>
	
	<!-- SQL Session -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 지정된 베이스 패키지에서 DAO(Mapper)를 검색하여 등록 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="co.kr.gogoeuro.mapper"></property>
	</bean>
	
	<!-- 트랜잭션 매니저 bean을 등록  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 어노테이션 기반의 트랙잭션을 사용한다. -->
	<tx:annotation-driven transaction-manager = "transactionManager"/>
</beans>
